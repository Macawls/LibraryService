{
  "openapi": "3.0.1",
  "info": {
    "title": "LibraryService",
    "description": "A library management system",
    "version": "v1"
  },
  "paths": {
    "/api/books": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Retrieve all books",
        "parameters": [
          {
            "name": "fuzzySearch",
            "in": "query",
            "description": "A fuzzy search query to filter books by title or author",
            "schema": {
              "type": "string"
            },
            "example": "Harry"
          },
          {
            "name": "publishedBefore",
            "in": "query",
            "description": "Before the specified year",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 2010
          },
          {
            "name": "publishedAfter",
            "in": "query",
            "description": "After the specified year",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1970
          },
          {
            "name": "genres",
            "in": "query",
            "description": "A list of genres to filter the books by, case insensitive",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Book"
        ],
        "summary": "Add a book",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/books/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Retrieve a book by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Book"
        ],
        "summary": "Delete a book by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/books/{id}/genres": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Retrieve the genres of the book by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Genre"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/genres": {
      "get": {
        "tags": [
          "Genre"
        ],
        "summary": "Retrieve all book genres",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Genre"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Genre"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Genre"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Genre"
        ],
        "summary": "Add a genre",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Genre"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Genre"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Genre"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Genre"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Genre"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Genre"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Genre"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/genres/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "summary": "Retrieve a genre by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Genre"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Genre"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Genre"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Genre"
        ],
        "summary": "Delete a genre by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/members": {
      "get": {
        "tags": [
          "Member"
        ],
        "summary": "Retrieve all members",
        "parameters": [
          {
            "name": "fuzzySearch",
            "in": "query",
            "description": "A fuzzy search query to filter members by first or last name",
            "schema": {
              "type": "string"
            },
            "example": "John"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Member"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Member"
        ],
        "summary": "Add a new member",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/members/{id}": {
      "get": {
        "tags": [
          "Member"
        ],
        "summary": "Retrieve a member by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Member"
        ],
        "summary": "Delete a member by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Book": {
        "required": [
          "author",
          "isbn",
          "publication_year",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "title": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The title of the book",
            "example": "The Great Gatsby"
          },
          "author": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "The author of the book",
            "example": "F. Scott Fitzgerald"
          },
          "publication_year": {
            "maximum": 2024,
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "The year the book was published",
            "format": "int32",
            "example": 1925
          },
          "isbn": {
            "maxLength": 13,
            "minLength": 10,
            "type": "string",
            "description": "The ISBN of the book",
            "example": "9780743273565"
          }
        },
        "additionalProperties": false,
        "description": "Represents a book"
      },
      "Genre": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "maxLength": 15,
            "minLength": 1,
            "type": "string",
            "description": "The name of the genre",
            "example": "fiction"
          }
        },
        "additionalProperties": false,
        "description": "A book genre"
      },
      "Member": {
        "required": [
          "email",
          "first_name",
          "last_name",
          "phone_number"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "description": "The user's email.",
            "format": "email",
            "example": "john123@yahoo.com"
          },
          "first_name": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The user's first name",
            "example": "John"
          },
          "last_name": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The user's last name",
            "example": "Doe"
          },
          "phone_number": {
            "maxLength": 20,
            "minLength": 10,
            "pattern": "((\\(\\d{3}\\) ?)|(\\d{3}-))?\\d{3}-\\d{4}",
            "type": "string",
            "description": "The user's contact number",
            "example": "073 321 6890"
          }
        },
        "additionalProperties": false,
        "description": "A member of the library"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    }
  }
}